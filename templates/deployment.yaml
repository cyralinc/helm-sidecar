{{- /*
Copyright Cyral, Inc.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
      annotations:
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
        {{- if and .Values.metrics.enabled .Values.metrics.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.metrics.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "cyral.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ template "cyral.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      volumes:
        - name: cyral-sidecar-supervisor
          emptyDir: {}
        - name: cyral-sidecar-fluentbit
          emptyDir: {}
        - name: cyral-sidecar-openresty
          emptyDir: {}
        - name: cyral-sidecar-openresty-local
          emptyDir: {}
        - name: cyral-sidecar-nginx
          emptyDir: {}
        - name: cyral-sidecar-ca-bundles
          emptyDir: {}
      initContainers:
        - name: init-sidecar
          image: {{ include "cyral.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          volumeMounts:
            - name: cyral-sidecar-supervisor
              mountPath: /supervisor-temp
            - name: cyral-sidecar-fluentbit
              mountPath: /fluentbit-temp
            - name: cyral-sidecar-openresty-local
              mountPath: /openresty-temp
            - name: cyral-sidecar-nginx
              mountPath: /nginx-temp
          command:
            - "sh"
            - "-c"
            - |
              cp -R /etc/supervisor/. /supervisor-temp &&
              cp -R /etc/fluent-bit/. /fluentbit-temp &&
              cp -R /usr/local/openresty/. /openresty-temp &&
              cp -R /etc/nginx/. /nginx-temp
      containers:
        - name: cyral-sidecar
          image: {{ include "cyral.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: CYRAL_SIDECAR_DEPLOYMENT_PROPERTIES
              value: {{ .Values.cyral.deploymentProperties | toJson | quote }}
            - name: CYRAL_SIDECAR_CLOUD_PROVIDER
              value: {{ .Values.cyral.deploymentProperties.cloud }}
            - name: CYRAL_CONTROL_PLANE
              value: {{ .Values.cyral.controlPlane | required "cyral.controlPlane is required." }}
            - name: CYRAL_SIDECAR_ID
              value: {{ .Values.cyral.sidecarId | required "cyral.sidecarId is required" }}
            - name: CYRAL_SIDECAR_ENDPOINT
              value: {{ include "cyral.dnsName" $ }}
            - name: CYRAL_SIDECAR_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "cyral.credentials.secretName" $ }}
                  key: clientId
            - name: CYRAL_SIDECAR_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "cyral.credentials.secretName" $ }}
                  key: clientSecret
            - name: CYRAL_CERTIFICATE_MANAGER_TLS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "cyral.certificates.tls.secretName" $ }}
                  key: tls.key
            - name: CYRAL_CERTIFICATE_MANAGER_TLS_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ include "cyral.certificates.tls.secretName" $ }}
                  key: tls.crt
            - name: CYRAL_CERTIFICATE_MANAGER_CA_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "cyral.certificates.ca.secretName" $ }}
                  key: tls.key
            - name: CYRAL_CERTIFICATE_MANAGER_CA_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ include "cyral.certificates.ca.secretName" $ }}
                  key: tls.crt
            - name: CYRAL_SSO_LOGIN_URL
              value: {{ .Values.cyral.sidecar.snowflake.SSOLoginURL | default "" }}
            - name: CYRAL_IDP_CERTIFICATE
              value: {{ .Values.cyral.sidecar.snowflake.idpCertificate | default "" }}
            - name: CYRAL_SIDECAR_IDP_PUBLIC_CERT
              value: {{ .Values.cyral.sidecar.snowflake.sidecarIdpCertificate | default "" }}
            - name: CYRAL_SIDECAR_IDP_PRIVATE_KEY
              value: {{ .Values.cyral.sidecar.snowflake.sidecarIdpPrivateKey | default "" }}
            - name: CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: cyral-sidecar
                  divisor: 1m
                  resource: limits.cpu
            - name: CPU_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: cyral-sidecar
                  divisor: 1m
                  resource: requests.cpu
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            {{- range $key, $value := .Values.containerPorts }}
            - name: {{ $key }}
              containerPort: {{ $value }}
            {{- end }}
            {{- if .Values.extraContainerPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraContainerPorts "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: cyral-sidecar-supervisor
              mountPath: /etc/supervisor
            - name: cyral-sidecar-fluentbit
              mountPath: /etc/fluent-bit
            - name: cyral-sidecar-openresty
              mountPath: /var/run/openresty
            - name: cyral-sidecar-openresty-local
              mountPath: /usr/local/openresty
            - name: cyral-sidecar-nginx
              mountPath: /etc/nginx
            - name: cyral-sidecar-ca-bundles
              mountPath: /etc/cyral/cyral-certificate-manager/bundles
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
